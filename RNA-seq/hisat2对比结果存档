xuruizhi@DESKTOP-HI65AUV:/mnt/d/project/rat/genome/index$ hisat2-build  -p 6 ../mRatBN7.2.chr1.fa mRatBN7.2.chr1
Settings:
  Output files: "mRatBN7.2.chr1.*.ht2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Local offset rate: 3 (one in 8)
  Local fTable chars: 6
  Local sequence length: 57344
  Local sequence overlap between two consecutive indexes: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  ../mRatBN7.2.chr1.fa
Reading reference sizes
  Time reading reference sizes: 00:00:04
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:03
  Time to read SNPs and splice sites: 00:00:00
Using parameters --bmax 8085645 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 8085645 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:01
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:02
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:02
  Sanity-checking and returning
Building samples
Reserving space for 66 sample suffixes
Generating random suffixes
QSorting 66 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 66 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 9, merged 31; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Split 3, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Split 2, merged 0; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 0; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 5.74979e+06 (target: 8085644)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering GFM loop
Getting block 1 of 45
  Reserving size (8085645) for bucket 1
Getting block 3 of 45
  Reserving size (8085645) for bucket 3
Getting block 4 of 45
  Reserving size (8085645) for bucket 4
  Calculating Z arrays for bucket 3
Getting block 2 of 45
  Reserving size (8085645) for bucket 2
Getting block 6 of 45
  Reserving size (8085645) for bucket 6
Getting block 5 of 45
  Entering block accumulator loop for bucket 3:
  Calculating Z arrays for bucket 2
  Calculating Z arrays for bucket 4
  Calculating Z arrays for bucket 6
  Reserving size (8085645) for bucket 5
  Entering block accumulator loop for bucket 4:
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 2:
  Entering block accumulator loop for bucket 6:
  Entering block accumulator loop for bucket 5:
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 2: 10%
  bucket 3: 10%
  bucket 5: 10%
  bucket 4: 10%
  bucket 6: 10%
  bucket 1: 20%
  bucket 2: 20%
  bucket 3: 20%
  bucket 4: 20%
  bucket 5: 20%
  bucket 6: 20%
  bucket 1: 30%
  bucket 2: 30%
  bucket 3: 30%
  bucket 5: 30%
  bucket 4: 30%
  bucket 1: 40%
  bucket 6: 30%
  bucket 2: 40%
  bucket 3: 40%
  bucket 1: 50%
  bucket 5: 40%
  bucket 4: 40%
  bucket 6: 40%
  bucket 2: 50%
  bucket 3: 50%
  bucket 1: 60%
  bucket 2: 60%
  bucket 5: 50%
  bucket 4: 50%
  bucket 6: 50%
  bucket 1: 70%
  bucket 3: 60%
  bucket 2: 70%
  bucket 5: 60%
  bucket 4: 60%
  bucket 6: 60%
  bucket 1: 80%
  bucket 3: 70%
  bucket 2: 80%
  bucket 1: 90%
  bucket 5: 70%
  bucket 4: 70%
  bucket 6: 70%
  bucket 3: 80%
  bucket 2: 90%
  bucket 1: 100%
  Sorting block of length 4196265 for bucket 1
  (Using difference cover)
  bucket 5: 80%
  bucket 4: 80%
  bucket 6: 80%
  bucket 3: 90%
  bucket 2: 100%
  Sorting block of length 6633461 for bucket 2
  (Using difference cover)
  bucket 5: 90%
  bucket 3: 100%
  Sorting block of length 7268483 for bucket 3
  (Using difference cover)
  bucket 4: 90%
  bucket 6: 90%
  bucket 5: 100%
  Sorting block of length 4025979 for bucket 5
  (Using difference cover)
  bucket 4: 100%
  Sorting block of length 8077858 for bucket 4
  (Using difference cover)
  bucket 6: 100%
  Sorting block of length 5004863 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:03
Returning block of 4196266 for bucket 1
Getting block 7 of 45
  Reserving size (8085645) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  Sorting block time: 00:00:02
Returning block of 4025980 for bucket 5
  bucket 7: 20%
Getting block 8 of 45
  Reserving size (8085645) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  Sorting block time: 00:00:03
Returning block of 5004864 for bucket 6
  bucket 7: 30%
  bucket 8: 10%
  Sorting block time: 00:00:03
Returning block of 6633462 for bucket 2
  bucket 7: 40%
  bucket 8: 20%
Getting block 9 of 45
  Reserving size (8085645) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 7: 50%
  bucket 8: 30%
  bucket 9: 10%
  Sorting block time: 00:00:04
Returning block of 7268484 for bucket 3
Getting block 10 of 45
  Reserving size (8085645) for bucket 10
  Calculating Z arrays for bucket 10
  Entering block accumulator loop for bucket 10:
  bucket 7: 60%
  bucket 8: 40%
  bucket 9: 20%
  bucket 10: 10%
  bucket 7: 70%
  Sorting block time: 00:00:05
Returning block of 8077859 for bucket 4
  bucket 8: 50%
  bucket 9: 30%
  bucket 10: 20%
Getting block 11 of 45
  Reserving size (8085645) for bucket 11
  Calculating Z arrays for bucket 11
  Entering block accumulator loop for bucket 11:
  bucket 7: 80%
  bucket 8: 60%
  bucket 9: 40%
  bucket 7: 90%
  bucket 10: 30%
  bucket 11: 10%
Getting block 12 of 45
  Reserving size (8085645) for bucket 12
  Calculating Z arrays for bucket 12
  Entering block accumulator loop for bucket 12:
  bucket 8: 70%
  bucket 9: 50%
  bucket 7: 100%
  Sorting block of length 4323645 for bucket 7
  (Using difference cover)
  bucket 10: 40%
  bucket 11: 20%
  bucket 12: 10%
  bucket 8: 80%
  bucket 9: 60%
  bucket 10: 50%
  bucket 11: 30%
  bucket 8: 90%
  bucket 9: 70%
  bucket 12: 20%
  bucket 10: 60%
  bucket 11: 40%
  bucket 8: 100%
  Sorting block of length 6680923 for bucket 8
  (Using difference cover)
  bucket 9: 80%
  bucket 12: 30%
  bucket 10: 70%
  bucket 11: 50%
  bucket 9: 90%
  bucket 10: 80%
  bucket 12: 40%
  bucket 11: 60%
  bucket 9: 100%
  Sorting block of length 5019883 for bucket 9
  (Using difference cover)
  bucket 10: 90%
  bucket 12: 50%
  bucket 11: 70%
  Sorting block time: 00:00:02
Returning block of 4323646 for bucket 7
  bucket 10: 100%
  Sorting block of length 4697960 for bucket 10
  (Using difference cover)
  bucket 11: 80%
  bucket 12: 60%
  bucket 11: 90%
  bucket 12: 70%
Getting block 13 of 45
  Reserving size (8085645) for bucket 13
  Calculating Z arrays for bucket 13
  Entering block accumulator loop for bucket 13:
  bucket 11: 100%
  Sorting block of length 4770091 for bucket 11
  (Using difference cover)
  bucket 12: 80%
  bucket 13: 10%
  bucket 12: 90%
  bucket 13: 20%
  bucket 12: 100%
  Sorting block of length 7938490 for bucket 12
  (Using difference cover)
  bucket 13: 30%
  bucket 13: 40%
  Sorting block time: 00:00:03
Returning block of 6680924 for bucket 8
  Sorting block time: 00:00:03
Returning block of 5019884 for bucket 9
  bucket 13: 50%
  Sorting block time: 00:00:03
Returning block of 4697961 for bucket 10
  bucket 13: 60%
Getting block 14 of 45
  Reserving size (8085645) for bucket 14
  Calculating Z arrays for bucket 14
  Entering block accumulator loop for bucket 14:
Getting block 15 of 45
  Reserving size (8085645) for bucket 15
  Calculating Z arrays for bucket 15
  Entering block accumulator loop for bucket 15:
Getting block 16 of 45
  Reserving size (8085645) for bucket 16
  Calculating Z arrays for bucket 16
  Entering block accumulator loop for bucket 16:
  Sorting block time: 00:00:02
Returning block of 4770092 for bucket 11
  bucket 14: 10%
  bucket 13: 70%
  bucket 16: 10%
  bucket 15: 10%
Getting block 17 of 45
  Reserving size (8085645) for bucket 17
  Calculating Z arrays for bucket 17
  Entering block accumulator loop for bucket 17:
  bucket 14: 20%
  bucket 13: 80%
  bucket 16: 20%
  bucket 15: 20%
  bucket 17: 10%
  bucket 14: 30%
  bucket 13: 90%
  bucket 15: 30%
  bucket 16: 30%
  bucket 17: 20%
  bucket 14: 40%
  bucket 13: 100%
  Sorting block of length 6885278 for bucket 13
  (Using difference cover)
  bucket 15: 40%
  bucket 16: 40%
  bucket 17: 30%
  bucket 14: 50%
  bucket 15: 50%
  bucket 16: 50%
  bucket 17: 40%
  bucket 14: 60%
  Sorting block time: 00:00:05
Returning block of 7938491 for bucket 12
  bucket 15: 60%
  bucket 16: 60%
  bucket 17: 50%
  bucket 14: 70%
  bucket 15: 70%
  bucket 16: 70%
  bucket 14: 80%
  bucket 17: 60%
Getting block 18 of 45
  Reserving size (8085645) for bucket 18
  Calculating Z arrays for bucket 18
  Entering block accumulator loop for bucket 18:
  bucket 15: 80%
  bucket 16: 80%
  bucket 14: 90%
  bucket 17: 70%
  bucket 18: 10%
  bucket 15: 90%
  bucket 16: 90%
  bucket 14: 100%
  Sorting block of length 7599439 for bucket 14
  (Using difference cover)
  bucket 17: 80%
  bucket 18: 20%
  bucket 15: 100%
  Sorting block of length 4980495 for bucket 15
  (Using difference cover)
  bucket 16: 100%
  Sorting block of length 6527832 for bucket 16
  (Using difference cover)
  bucket 17: 90%
  bucket 18: 30%
  bucket 17: 100%
  Sorting block of length 2614222 for bucket 17
  (Using difference cover)
  bucket 18: 40%
  Sorting block time: 00:00:04
Returning block of 6885279 for bucket 13
  bucket 18: 50%
  bucket 18: 60%
Getting block 19 of 45
  Reserving size (8085645) for bucket 19
  Calculating Z arrays for bucket 19
  Entering block accumulator loop for bucket 19:
  bucket 18: 70%
  Sorting block time: 00:00:02
Returning block of 2614223 for bucket 17
  bucket 19: 10%
Getting block 20 of 45
  Reserving size (8085645) for bucket 20
  Calculating Z arrays for bucket 20
  Entering block accumulator loop for bucket 20:
  bucket 18: 80%
  bucket 19: 20%
  Sorting block time: 00:00:02
Returning block of 4980496 for bucket 15
  bucket 20: 10%
  bucket 18: 90%
Getting block 21 of 45
  Reserving size (8085645) for bucket 21
  Calculating Z arrays for bucket 21
  Entering block accumulator loop for bucket 21:
  bucket 19: 30%
  bucket 20: 20%
  bucket 18: 100%
  Sorting block of length 7971639 for bucket 18
  (Using difference cover)
  Sorting block time: 00:00:03
Returning block of 6527833 for bucket 16
  bucket 19: 40%
  bucket 20: 30%
  bucket 21: 10%
  Sorting block time: 00:00:04
Returning block of 7599440 for bucket 14
  bucket 19: 50%
  bucket 20: 40%
  bucket 21: 20%
Getting block 22 of 45
  Reserving size (8085645) for bucket 22
  Calculating Z arrays for bucket 22
  Entering block accumulator loop for bucket 22:
  bucket 19: 60%
Getting block 23 of 45
  Reserving size (8085645) for bucket 23
  Calculating Z arrays for bucket 23
  Entering block accumulator loop for bucket 23:
  bucket 20: 50%
  bucket 21: 30%
  bucket 22: 10%
  bucket 19: 70%
  bucket 20: 60%
  bucket 23: 10%
  bucket 21: 40%
  bucket 22: 20%
  bucket 19: 80%
  bucket 20: 70%
  bucket 21: 50%
  bucket 23: 20%
  bucket 22: 30%
  bucket 19: 90%
  bucket 20: 80%
  bucket 21: 60%
  bucket 22: 40%
  bucket 23: 30%
  bucket 19: 100%
  Sorting block of length 7989659 for bucket 19
  (Using difference cover)
  bucket 20: 90%
  bucket 21: 70%
  bucket 22: 50%
  bucket 20: 100%
  Sorting block of length 1192542 for bucket 20
  (Using difference cover)
  bucket 23: 40%
  bucket 21: 80%
  bucket 22: 60%
  Sorting block time: 00:00:04
Returning block of 7971640 for bucket 18
  bucket 23: 50%
  Sorting block time: 00:00:00
Returning block of 1192543 for bucket 20
  bucket 21: 90%
  bucket 22: 70%
Getting block 24 of 45
  Reserving size (8085645) for bucket 24
  Calculating Z arrays for bucket 24
  Entering block accumulator loop for bucket 24:
  bucket 23: 60%
  bucket 21: 100%
  Sorting block of length 7856616 for bucket 21
  (Using difference cover)
Getting block 25 of 45
  Reserving size (8085645) for bucket 25
  Calculating Z arrays for bucket 25
  Entering block accumulator loop for bucket 25:
  bucket 22: 80%
  bucket 24: 10%
  bucket 23: 70%
  bucket 22: 90%
  bucket 25: 10%
  bucket 24: 20%
  bucket 22: 100%
  Sorting block of length 1792813 for bucket 22
  (Using difference cover)
  bucket 25: 20%
  bucket 23: 80%
  bucket 24: 30%
  bucket 25: 30%
  bucket 24: 40%
  bucket 23: 90%
  bucket 25: 40%
  bucket 24: 50%
  Sorting block time: 00:00:01
Returning block of 1792814 for bucket 22
  bucket 23: 100%
  Sorting block of length 8011766 for bucket 23
  (Using difference cover)
Getting block 26 of 45
  Reserving size (8085645) for bucket 26
  Calculating Z arrays for bucket 26
  Entering block accumulator loop for bucket 26:
  Sorting block time: 00:00:05
Returning block of 7989660 for bucket 19
  bucket 25: 50%
  bucket 24: 60%
  bucket 26: 10%
  bucket 24: 70%
  bucket 25: 60%
Getting block 27 of 45
  Reserving size (8085645) for bucket 27
  Calculating Z arrays for bucket 27
  Entering block accumulator loop for bucket 27:
  bucket 26: 20%
  bucket 24: 80%
  bucket 25: 70%
  bucket 27: 10%
  bucket 26: 30%
  bucket 24: 90%
  bucket 25: 80%
  Sorting block time: 00:00:04
Returning block of 7856617 for bucket 21
  bucket 27: 20%
  bucket 26: 40%
  bucket 24: 100%
  Sorting block of length 4554736 for bucket 24
  (Using difference cover)
  bucket 25: 90%
  bucket 27: 30%
  bucket 26: 50%
Getting block 28 of 45
  Reserving size (8085645) for bucket 28
  Calculating Z arrays for bucket 28
  Entering block accumulator loop for bucket 28:
  bucket 25: 100%
  Sorting block of length 7029757 for bucket 25
  (Using difference cover)
  bucket 27: 40%
  bucket 26: 60%
  bucket 28: 10%
  bucket 27: 50%
  bucket 26: 70%
  bucket 28: 20%
  bucket 27: 60%
  bucket 26: 80%
  bucket 28: 30%
  Sorting block time: 00:00:05
Returning block of 8011767 for bucket 23
  bucket 27: 70%
  bucket 26: 90%
  bucket 28: 40%
  Sorting block time: 00:00:02
Returning block of 4554737 for bucket 24
  bucket 27: 80%
  bucket 26: 100%
  Sorting block of length 6080690 for bucket 26
  (Using difference cover)
  bucket 28: 50%
Getting block 29 of 45
  Reserving size (8085645) for bucket 29
  Calculating Z arrays for bucket 29
  Entering block accumulator loop for bucket 29:
Getting block 30 of 45
  Reserving size (8085645) for bucket 30
  Calculating Z arrays for bucket 30
  Entering block accumulator loop for bucket 30:
  bucket 27: 90%
  bucket 28: 60%
  bucket 29: 10%
  bucket 30: 10%
  bucket 27: 100%
  Sorting block of length 7979940 for bucket 27
  (Using difference cover)
  bucket 28: 70%
  bucket 29: 20%
  bucket 30: 20%
  bucket 28: 80%
  bucket 29: 30%
  Sorting block time: 00:00:04
Returning block of 7029758 for bucket 25
  bucket 30: 30%
  bucket 28: 90%
  bucket 29: 40%
Getting block 31 of 45
  Reserving size (8085645) for bucket 31
  Calculating Z arrays for bucket 31
  Entering block accumulator loop for bucket 31:
  bucket 30: 40%
  bucket 28: 100%
  Sorting block of length 1464291 for bucket 28
  (Using difference cover)
  bucket 29: 50%
  bucket 31: 10%
  bucket 30: 50%
  bucket 29: 60%
  Sorting block time: 00:00:03
Returning block of 6080691 for bucket 26
  Sorting block time: 00:00:01
Returning block of 1464292 for bucket 28
  bucket 31: 20%
  bucket 30: 60%
Getting block 32 of 45
  Reserving size (8085645) for bucket 32
  Calculating Z arrays for bucket 32
  Entering block accumulator loop for bucket 32:
  bucket 29: 70%
  bucket 31: 30%
  bucket 30: 70%
Getting block 33 of 45
  Reserving size (8085645) for bucket 33
  Calculating Z arrays for bucket 33
  Entering block accumulator loop for bucket 33:
  bucket 32: 10%
  bucket 29: 80%
  bucket 31: 40%
  bucket 30: 80%
  bucket 32: 20%
  bucket 29: 90%
  bucket 33: 10%
  bucket 30: 90%
  bucket 31: 50%
  bucket 29: 100%
  Sorting block of length 7980526 for bucket 29
  (Using difference cover)
  bucket 32: 30%
  bucket 33: 20%
  Sorting block time: 00:00:04
Returning block of 7979941 for bucket 27
  bucket 30: 100%
  Sorting block of length 2585182 for bucket 30
  (Using difference cover)
  bucket 31: 60%
  bucket 32: 40%
  bucket 33: 30%
Getting block 34 of 45
  Reserving size (8085645) for bucket 34
  Calculating Z arrays for bucket 34
  Entering block accumulator loop for bucket 34:
  bucket 31: 70%
  bucket 32: 50%
  bucket 33: 40%
  bucket 34: 10%
  bucket 31: 80%
  bucket 32: 60%
  bucket 33: 50%
  Sorting block time: 00:00:02
Returning block of 2585183 for bucket 30
  bucket 31: 90%
  bucket 34: 20%
Getting block 35 of 45
  Reserving size (8085645) for bucket 35
  Calculating Z arrays for bucket 35
  Entering block accumulator loop for bucket 35:
  bucket 32: 70%
  bucket 33: 60%
  bucket 31: 100%
  Sorting block of length 7325089 for bucket 31
  (Using difference cover)
  bucket 34: 30%
  bucket 35: 10%
  bucket 32: 80%
  bucket 33: 70%
  bucket 34: 40%
  bucket 35: 20%
  bucket 32: 90%
  bucket 34: 50%
  bucket 33: 80%
  bucket 35: 30%
  bucket 32: 100%
  Sorting block of length 4102260 for bucket 32
  (Using difference cover)
  bucket 34: 60%
  bucket 35: 40%
  bucket 33: 90%
  Sorting block time: 00:00:04
Returning block of 7980527 for bucket 29
  bucket 34: 70%
  bucket 35: 50%
  bucket 33: 100%
  Sorting block of length 6194060 for bucket 33
  (Using difference cover)
  bucket 34: 80%
Getting block 36 of 45
  Reserving size (8085645) for bucket 36
  Calculating Z arrays for bucket 36
  Entering block accumulator loop for bucket 36:
  bucket 35: 60%
  bucket 34: 90%
  bucket 36: 10%
  bucket 35: 70%
  bucket 34: 100%
  Sorting block of length 4547512 for bucket 34
  (Using difference cover)
  Sorting block time: 00:00:02
Returning block of 4102261 for bucket 32
  bucket 36: 20%
  bucket 35: 80%
Getting block 37 of 45
  Reserving size (8085645) for bucket 37
  Calculating Z arrays for bucket 37
  Entering block accumulator loop for bucket 37:
  Sorting block time: 00:00:04
Returning block of 7325090 for bucket 31
  bucket 36: 30%
  bucket 35: 90%
  bucket 37: 10%
  bucket 36: 40%
  bucket 35: 100%
  Sorting block of length 5904340 for bucket 35
  (Using difference cover)
Getting block 38 of 45
  Reserving size (8085645) for bucket 38
  Calculating Z arrays for bucket 38
  Entering block accumulator loop for bucket 38:
  bucket 37: 20%
  bucket 36: 50%
  bucket 38: 10%
  bucket 37: 30%
  Sorting block time: 00:00:04
Returning block of 6194061 for bucket 33
  bucket 36: 60%
  Sorting block time: 00:00:02
Returning block of 4547513 for bucket 34
  bucket 38: 20%
  bucket 37: 40%
Getting block 39 of 45
  Reserving size (8085645) for bucket 39
  Calculating Z arrays for bucket 39
  Entering block accumulator loop for bucket 39:
  bucket 36: 70%
Getting block 40 of 45
  Reserving size (8085645) for bucket 40
  Calculating Z arrays for bucket 40
  Entering block accumulator loop for bucket 40:
  bucket 38: 30%
  bucket 37: 50%
  bucket 36: 80%
  bucket 39: 10%
  bucket 38: 40%
  bucket 40: 10%
  bucket 37: 60%
  bucket 36: 90%
  bucket 39: 20%
  bucket 38: 50%
  bucket 40: 20%
  Sorting block time: 00:00:03
Returning block of 5904341 for bucket 35
  bucket 37: 70%
  bucket 36: 100%
  Sorting block of length 5640846 for bucket 36
  (Using difference cover)
  bucket 38: 60%
  bucket 39: 30%
  bucket 40: 30%
Getting block 41 of 45
  Reserving size (8085645) for bucket 41
  Calculating Z arrays for bucket 41
  Entering block accumulator loop for bucket 41:
  bucket 37: 80%
  bucket 38: 70%
  bucket 39: 40%
  bucket 40: 40%
  bucket 37: 90%
  bucket 41: 10%
  bucket 38: 80%
  bucket 39: 50%
  bucket 40: 50%
  bucket 37: 100%
  Sorting block of length 7420699 for bucket 37
  (Using difference cover)
  bucket 41: 20%
  bucket 38: 90%
  bucket 39: 60%
  bucket 40: 60%
  bucket 41: 30%
  bucket 38: 100%
  Sorting block of length 2219148 for bucket 38
  (Using difference cover)
  bucket 39: 70%
  bucket 40: 70%
  bucket 41: 40%
  Sorting block time: 00:00:03
Returning block of 5640847 for bucket 36
  bucket 39: 80%
  bucket 40: 80%
  bucket 41: 50%
Getting block 42 of 45
  Reserving size (8085645) for bucket 42
  Calculating Z arrays for bucket 42
  Entering block accumulator loop for bucket 42:
  Sorting block time: 00:00:02
Returning block of 2219149 for bucket 38
  bucket 39: 90%
  bucket 40: 90%
Getting block 43 of 45
  Reserving size (8085645) for bucket 43
  Calculating Z arrays for bucket 43
  Entering block accumulator loop for bucket 43:
  bucket 41: 60%
  bucket 42: 10%
  bucket 39: 100%
  Sorting block of length 7932167 for bucket 39
  (Using difference cover)
  bucket 40: 100%
  Sorting block of length 7251777 for bucket 40
  (Using difference cover)
  bucket 43: 10%
  bucket 41: 70%
  bucket 42: 20%
  bucket 43: 20%
  bucket 41: 80%
  bucket 42: 30%
  bucket 43: 30%
  Sorting block time: 00:00:04
Returning block of 7420700 for bucket 37
  bucket 41: 90%
  bucket 42: 40%
  bucket 43: 40%
  bucket 41: 100%
  Sorting block of length 7592218 for bucket 41
  (Using difference cover)
  bucket 42: 50%
Getting block 44 of 45
  Reserving size (8085645) for bucket 44
  Calculating Z arrays for bucket 44
  Entering block accumulator loop for bucket 44:
  bucket 43: 50%
  bucket 42: 60%
  bucket 44: 10%
  bucket 43: 60%
  bucket 42: 70%
  bucket 44: 20%
  bucket 43: 70%
  bucket 42: 80%
  bucket 44: 30%
  bucket 43: 80%
  Sorting block time: 00:00:04
Returning block of 7251778 for bucket 40
  Sorting block time: 00:00:04
Returning block of 7932168 for bucket 39
  bucket 42: 90%
  bucket 44: 40%
  bucket 43: 90%
Getting block 45 of 45
  Reserving size (8085645) for bucket 45
  Calculating Z arrays for bucket 45
  Entering block accumulator loop for bucket 45:
  bucket 42: 100%
  Sorting block of length 5133652 for bucket 42
  (Using difference cover)
  bucket 44: 50%
  bucket 43: 100%
  Sorting block of length 2996200 for bucket 43
  (Using difference cover)
  bucket 45: 10%
  bucket 44: 60%
  bucket 45: 20%
  bucket 44: 70%
  bucket 45: 30%
  Sorting block time: 00:00:04
Returning block of 7592219 for bucket 41
  bucket 45: 40%
  bucket 44: 80%
  Sorting block time: 00:00:02
Returning block of 2996201 for bucket 43
  bucket 45: 50%
  bucket 44: 90%
  bucket 45: 60%
  bucket 44: 100%
  Sorting block of length 7249361 for bucket 44
  (Using difference cover)
  bucket 45: 70%
  Sorting block time: 00:00:03
Returning block of 5133653 for bucket 42
  bucket 45: 80%
  bucket 45: 90%
  bucket 45: 100%
  Sorting block of length 7495946 for bucket 45
  (Using difference cover)
  Sorting block time: 00:00:04
Returning block of 7249362 for bucket 44
  Sorting block time: 00:00:04
Returning block of 7495947 for bucket 45
Exited GFM loop
fchr[A]: 0
fchr[C]: 74065786
fchr[G]: 129387099
fchr[T]: 184670282
fchr[$]: 258740643
Exiting GFM::buildToDisk()
Returning from initFromVector
Wrote 90442047 bytes to primary GFM file: mRatBN7.2.chr1.1.ht2
Wrote 64685168 bytes to secondary GFM file: mRatBN7.2.chr1.2.ht2
Re-opening _in1 and _in2 as input streams
Returning from GFM constructor
Returning from initFromVector
Wrote 113645215 bytes to primary GFM file: mRatBN7.2.chr1.5.ht2
Wrote 65871324 bytes to secondary GFM file: mRatBN7.2.chr1.6.ht2
Re-opening _in5 and _in5 as input streams
Returning from HGFM constructor
Headers:
    len: 258740643
    gbwtLen: 258740644
    nodes: 258740644
    sz: 64685161
    gbwtSz: 64685162
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 0
    eftabSz: 0
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 16171291
    offsSz: 64685164
    lineSz: 64
    sideSz: 64
    sideGbwtSz: 48
    sideGbwtLen: 192
    numSides: 1347608
    numLines: 1347608
    gbwtTotLen: 86246912
    gbwtTotSz: 86246912
    reverse: 0
    linearFM: Yes
Total time for call to driver() for forward index: 00:01:50
